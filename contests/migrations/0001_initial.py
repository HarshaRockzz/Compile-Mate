# Generated by Django 4.2.7 on 2025-06-25 09:58

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Contest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('description', models.TextField()),
                ('contest_type', models.CharField(choices=[('weekly', 'Weekly Contest'), ('monthly', 'Monthly Contest'), ('special', 'Special Contest'), ('practice', 'Practice Contest')], max_length=20)),
                ('status', models.CharField(choices=[('upcoming', 'Upcoming'), ('active', 'Active'), ('ended', 'Ended'), ('cancelled', 'Cancelled')], default='upcoming', max_length=20)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('duration', models.DurationField(help_text='Contest duration in hours')),
                ('is_rated', models.BooleanField(default=True, help_text='Whether this contest affects ratings')),
                ('allow_registration', models.BooleanField(default=True)),
                ('max_participants', models.IntegerField(blank=True, help_text='Maximum number of participants', null=True)),
                ('total_prize_pool', models.IntegerField(default=0, help_text='Total prize pool in coins')),
                ('prize_distribution', models.JSONField(default=dict, help_text='Prize distribution for top participants')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='ContestAnnouncement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('is_important', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ContestLeaderboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField()),
                ('score', models.IntegerField()),
                ('problems_solved', models.IntegerField(default=0)),
                ('total_time', models.DurationField(default=datetime.timedelta)),
                ('last_submission', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['contest', 'rank'],
            },
        ),
        migrations.CreateModel(
            name='ContestParticipation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('score', models.IntegerField(default=0)),
                ('rank', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-score', 'joined_at'],
            },
        ),
        migrations.CreateModel(
            name='ContestProblem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(help_text='Order of problem in contest')),
                ('points', models.IntegerField(default=100, help_text='Points for solving this problem')),
                ('is_visible', models.BooleanField(default=True, help_text='Whether problem is visible to participants')),
            ],
            options={
                'ordering': ['contest', 'order'],
            },
        ),
        migrations.CreateModel(
            name='ContestSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('accepted', 'Accepted'), ('wrong_answer', 'Wrong Answer'), ('time_limit_exceeded', 'Time Limit Exceeded'), ('memory_limit_exceeded', 'Memory Limit Exceeded'), ('runtime_error', 'Runtime Error'), ('compilation_error', 'Compilation Error'), ('internal_error', 'Internal Error')], max_length=25)),
                ('participation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contests.contestparticipation')),
            ],
            options={
                'ordering': ['-submitted_at'],
            },
        ),
    ]
