# Generated by Django 4.2.7 on 2025-06-25 09:58

import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DailyReward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('coins_earned', models.IntegerField(default=0)),
                ('streak_bonus', models.IntegerField(default=0)),
                ('total_coins', models.IntegerField(default=0)),
                ('claimed_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ReferralReward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coins_earned', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('reward_type', models.CharField(choices=[('voucher', 'Voucher'), ('badge', 'Badge'), ('title', 'Title'), ('feature', 'Feature'), ('other', 'Other')], max_length=20)),
                ('cost_in_coins', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('is_available', models.BooleanField(default=True)),
                ('reward_data', models.JSONField(default=dict, help_text='Additional data for the reward')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['category', 'cost_in_coins'],
            },
        ),
        migrations.CreateModel(
            name='RewardCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, help_text='Icon class name', max_length=50)),
                ('color', models.CharField(default='#3B82F6', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Reward categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserReward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-earned_at'],
            },
        ),
        migrations.CreateModel(
            name='Voucher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor', models.CharField(choices=[('zomato', 'Zomato'), ('swiggy', 'Swiggy'), ('ola', 'Ola'), ('uber', 'Uber'), ('amazon', 'Amazon'), ('flipkart', 'Flipkart'), ('paytm', 'Paytm'), ('other', 'Other')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('value', models.DecimalField(decimal_places=2, help_text='Voucher value in currency', max_digits=10)),
                ('cost_in_coins', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('code', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(choices=[('available', 'Available'), ('redeemed', 'Redeemed'), ('expired', 'Expired'), ('disabled', 'Disabled')], default='available', max_length=20)),
                ('valid_from', models.DateTimeField(default=django.utils.timezone.now)),
                ('valid_until', models.DateTimeField(blank=True, null=True)),
                ('max_uses', models.IntegerField(default=1, help_text='Maximum number of times this voucher can be used')),
                ('current_uses', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VoucherRedemption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('redeemed_at', models.DateTimeField(auto_now_add=True)),
                ('coins_spent', models.IntegerField()),
            ],
            options={
                'ordering': ['-redeemed_at'],
            },
        ),
    ]
