# Generated by Django 4.2.7 on 2025-06-25 09:58

import datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('new', 'New'), ('read', 'Read'), ('replied', 'Replied'), ('closed', 'Closed')], default='new', max_length=20)),
                ('admin_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=500)),
                ('answer', models.TextField()),
                ('category', models.CharField(blank=True, max_length=50)),
                ('order', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQs',
                'ordering': ['category', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('achievement', 'Achievement'), ('contest', 'Contest'), ('reward', 'Reward'), ('system', 'System'), ('social', 'Social')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('related_url', models.URLField(blank=True, help_text='URL to related content')),
                ('related_object_id', models.IntegerField(blank=True, null=True)),
                ('related_object_type', models.CharField(blank=True, max_length=50)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='CompileMate', max_length=100)),
                ('site_description', models.TextField(blank=True)),
                ('site_logo', models.ImageField(blank=True, null=True, upload_to='site/')),
                ('enable_registration', models.BooleanField(default=True)),
                ('enable_social_login', models.BooleanField(default=True)),
                ('enable_contests', models.BooleanField(default=True)),
                ('enable_rewards', models.BooleanField(default=True)),
                ('initial_coins', models.IntegerField(default=100)),
                ('coins_per_accepted_solution', models.IntegerField(default=10)),
                ('coins_per_hard_problem', models.IntegerField(default=25)),
                ('coins_per_contest_participation', models.IntegerField(default=50)),
                ('coins_per_weekly_streak', models.IntegerField(default=100)),
                ('default_contest_duration', models.DurationField(default=datetime.timedelta(seconds=7200))),
                ('max_contest_problems', models.IntegerField(default=6)),
                ('default_time_limit', models.FloatField(default=1.0)),
                ('default_memory_limit', models.IntegerField(default=128)),
                ('enable_following', models.BooleanField(default=True)),
                ('enable_discussions', models.BooleanField(default=True)),
                ('enable_achievements', models.BooleanField(default=True)),
                ('maintenance_mode', models.BooleanField(default=False)),
                ('maintenance_message', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Site Settings',
                'verbose_name_plural': 'Site Settings',
            },
        ),
        migrations.CreateModel(
            name='SystemLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('info', 'Info'), ('warning', 'Warning'), ('error', 'Error'), ('critical', 'Critical')], max_length=10)),
                ('message', models.TextField()),
                ('details', models.JSONField(blank=True, default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('login', 'Login'), ('problem_solve', 'Problem Solved'), ('contest_join', 'Contest Joined'), ('contest_win', 'Contest Won'), ('reward_earn', 'Reward Earned'), ('achievement', 'Achievement Unlocked'), ('profile_update', 'Profile Updated'), ('discussion_post', 'Discussion Post')], max_length=20)),
                ('description', models.TextField()),
                ('related_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'User Activity',
                'verbose_name_plural': 'User Activities',
                'ordering': ['-created_at'],
            },
        ),
    ]
