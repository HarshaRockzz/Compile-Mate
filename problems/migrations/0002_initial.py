# Generated by Django 4.2.7 on 2025-06-25 09:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('problems', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='submission',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='problemdiscussion',
            name='downvotes',
            field=models.ManyToManyField(blank=True, related_name='downvoted_discussions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='problemdiscussion',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='problems.problemdiscussion'),
        ),
        migrations.AddField(
            model_name='problemdiscussion',
            name='problem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discussions', to='problems.problem'),
        ),
        migrations.AddField(
            model_name='problemdiscussion',
            name='upvotes',
            field=models.ManyToManyField(blank=True, related_name='upvoted_discussions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='problemdiscussion',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discussions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='problem',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_problems', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='problem',
            name='tags',
            field=models.ManyToManyField(related_name='problems', to='problems.tag'),
        ),
        migrations.AlterUniqueTogether(
            name='testcase',
            unique_together={('problem', 'order')},
        ),
    ]
